@model Attendance.Models.ChangePassword

@{
    /**/

    Layout = "~/Views/Shared/_LayoutPage.cshtml"; ;
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <section class="content-header">
        <h1>
            Change Password
        </h1>
        <ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
            <li class="active">Change Password</li>
        </ol>
    </section>
    <!-- Main content -->
    <section class="content">
        <div class="row">
            <div class="col-md-12">
                <div class="box box-info">
                    <div class="box-header with-border">
                        <div class="form-horizontal">
                            <div class="box-body">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="form-group">
                                    <label class="control-label col-md-4 ">Old Password</label>
                                    <div class="col-md-3">
                                        @Html.Password("oldPassword", "", new { @class = "form-control" })

                                        @Html.ValidationMessageFor(model => model.oldPassword, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-4 ">New Password</label>
                                    <div class="col-md-3">
                                        @Html.Password("newPassword", "", new { @class = "form-control" })

                                        @Html.ValidationMessageFor(model => model.newPassword, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-4 ">Confirm Password</label>
                                    <div class="col-md-3">
                                        @Html.Password("confirmPassword", "", new { @class = "form-control" })

                                        @Html.ValidationMessageFor(model => model.confirmPassword, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-4"></div>
                            <div class="col-md-4">
                                <input type="button" onclick="Change()" value="Change" class="btn btn-success" />
                                <input type="button" value="Cancel" onclick="Cancel()" class="btn btn-danger" style="margin-left: 4px;" />
                            </div>
                            <div class="col-md-4"></div>
                        </div>
                    </div>
                </div>
                <br />
            </div>
            </div>
    </section>
}

<script>
        function Cancel() {
             window.location.href = "@Url.Action("Change", "Home")";
        }
        function Change() {
            $('.input-validation-error').removeClass('input-validation-error');
            $('.field-validation-error').addClass('field-validation-valid').html('').removeClass('field-validation-error');
            var nanobar = new Nanobar({ bg: '#367fa9' });
            nanobar.go(30);
            var model = {
                "oldPassword": $('#oldPassword').val(),
                "newPassword": $('#newPassword').val(),
                "confirmPassword": $('#confirmPassword').val(),
            };
            var form_data = new FormData();
            for (var key in model) {
                form_data.append(key, model[key]);
            }
            $.ajax({
                cache: 'false',
                method: 'POST',
                url: '@Url.Action("ChangePassword","Home")',
                contentType: 'application/json',
                data: form_data,
                processData: false,
                contentType: false,
                dataType: 'JSON',
                success: function (data) {
                    nanobar.go(60);
                    console.log(data);

                    if (data.Code == 400) {
                        if (data.Errors != null) {
                            $(data.Errors).each(function (i, e) {
                                $('#' + e.key).addClass('input-validation-error');
                                $("span[data-valmsg-for='" + e.key + "'").removeClass('field-validation-valid').addClass('field-validation-error').html(e.errors[0]);
                            });
                            if (data.Errors == "Invalid credentials") {
                                showToaster(data.Errors, "error");
                            }
                        }
                    }
                    else if (data.Valid == "true") {
                        if (data.Success == "false") {
                            if (data.Data != "SessionExpired") toastr.error("", data.Data);
                        }
                        else {
                            if (data.Success == "true") {
                                toastr.success("", data.Data);
                            }
                        }
                    }
                    nanobar.go(100);
                },
                error: function () {
                    showToaster("", "Error ocurred try again later", "error");
                    nanobar.go(100);
                }
            });
            return false;
        }

</script>


